{"version":3,"sources":["js/reducers/genres.js","js/constants/actions/genres.js","js/reducers/index.js","js/config/store.js","js/constants/routes.js","js/constants/errors.js","js/helpers/exceptions.js","js/api/index.js","js/api/movies.js","js/helpers/formatData.js","js/components/Partials/Loader/index.jsx","js/constants/categories.js","js/hoc/withCatalogRequest.jsx","js/components/Partials/GenresList/index.jsx","js/actions/genres.js","js/components/Partials/Pagination/index.jsx","js/constants/url.js","js/components/Partials/SmallMovieCard/index.jsx","js/components/Partials/MoviesCatalog/index.jsx","js/components/Pages/CatalogPage/index.jsx","js/components/Partials/Slider/index.jsx","js/constants/rating.js","js/components/Partials/MovieTabOverview/index.jsx","js/helpers/rating.js","js/components/Partials/MovieTabReviews/index.jsx","js/components/Partials/MovieTabDetails/index.jsx","js/components/Partials/MovieTabCast/index.jsx","js/components/Pages/DetailsPage/index.jsx","js/components/Partials/BigMovieCard/index.jsx","js/components/Pages/MainPage/index.jsx","js/components/Pages/404/index.jsx","js/components/Partials/Footer/index.jsx","js/components/Partials/SearchBar/index.jsx","js/components/Partials/Header/index.jsx","js/components/App.jsx","index.js"],"names":["initialState","activeGenres","genres","state","action","filter","genre","id","type","combineReducers","logger","createLogger","createStore","rootReducer","applyMiddleware","RequestError","status","responseData","errorData","message","DEFAULT_ERROR","errors","name","Error","baseUrl","contentTypes","getResponseData","response","a","headers","get","includes","json","TypeError","sendRequest","url","options","requestUrl","requestHeaders","Headers","requestOptions","fetch","ok","sendGetRequest","data","Object","keys","reduce","queryString","key","index","paramStringStart","paramString","encodeURIComponent","e","encodeQueryData","api_key","language","method","getCategoryData","category","getDetailsData","getSearchResult","getDiscoverResult","formatTime","time","unit","format","moment","duration","trim","formatDate","date","parseQueryString","query","pairs","substr","split","i","length","pair","decodeURIComponent","getStringValues","array","map","item","join","formatCardData","numberOfEpisodes","number_of_episodes","numberOfSeasons","number_of_seasons","originalName","original_name","episodeRunTime","episode_run_time","reviews","results","homepage","originalTitle","original_title","originalLanguage","original_language","spokenLanguages","spoken_languages","runtime","tagline","releaseDate","release_date","poster","poster_path","backgroundImage","backdrop_path","voteAverage","vote_average","voteCount","vote_count","overview","title","credits","cast","recommendations","formattedRunTime","releaseYear","genresList","spokenLanguagesList","cardTitle","Loader","isActive","children","containerClass","className","MOVIE_TABS","OVERVIEW","DETAILS","REVIEWS","CAST","withCatalogRequest","Component","useState","isLoading","setIsLoading","setData","error","setError","location","useLocation","params","useParams","useSelector","page","cardId","isMovie","CATEGORIES","getData","useCallback","pathname","ROUTES","mostPopularMovies","mostPopularTvs","randomMovie","Math","ceil","random","bigMovieCardData","movieId","slice","append_to_response","detailsData","search","searchParams","catalogData","with_genres","isGenresFilterShown","useEffect","window","scrollTo","GenresList","genresData","setGenresData","dispatch","useDispatch","history","useHistory","getGenresData","to","onClick","event","preventDefault","removeActiveGenre","addActiveGenre","push","Pagination","totalPages","activePage","Number","pageNumbers","pageLinks","unshift","firstPageLink","LastPageLink","link","URL_IMAGE","SmallMovieCard","alt","height","loading","src","width","defaultProps","MoviesCatalog","cardProps","CatalogPage","headerText","total_pages","totalResults","total_results","SwiperCore","use","Navigation","Slider","items","swiperSettings","updateOnWindowResize","breakpoints","1440","slidesPerView","slidesPerGroup","spaceBetween","1024","480","0","setWrapperSize","navigation","min","MovieTabOverview","ratingLevel","useMemo","rating","USER_RATINGS","rank","pop","MovieTabReviews","author","content","href","deafultProps","MovieTabDetails","rel","target","MovieTabCast","cast_id","character","profileName","profilePath","profile_path","reservedImage","gender","DetailsPage","props","activeTab","setActiveTab","style","values","tab","renderActiveTab","BigMovieCard","MainPage","PageNotFound","Footer","SearchBar","closeMobileNav","searchInput","setSearchInput","searchCategory","setSearchCategory","onSubmit","onChange","value","viewBox","xmlns","d","Header","isMobileNavOpened","setIsMobileNavOpened","document","body","classList","remove","add","App","component","path","exact","console","log","process","ReactDOM","render","store","basename","getElementById"],"mappings":"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","file":"static/js/main.32cd9dd7.chunk.js","sourcesContent":["import { ADD_ACTIVE_GENRE, REMOVE_ACTIVE_GENRE, CLEAR_ACTIVE_GENRES } from '../constants/actions/genres';\n\nconst initialState = {\n  activeGenres: [],\n};\n\nconst genres = (state = initialState, action) => {\n  const activeGenres = state.activeGenres.filter((genre) => genre !== action.id);\n\n  switch (action.type) {\n    case ADD_ACTIVE_GENRE:\n      return {\n        activeGenres: [...state.activeGenres, action.id],\n      };\n    case REMOVE_ACTIVE_GENRE:\n      return { activeGenres };\n    case CLEAR_ACTIVE_GENRES:\n      return {\n        activeGenres: [],\n      };\n    default:\n      return state;\n  }\n};\n\nexport default genres;\n","export const ADD_ACTIVE_GENRE = 'activeGenres/add';\nexport const REMOVE_ACTIVE_GENRE = 'activeGenres/remove';\nexport const CLEAR_ACTIVE_GENRES = 'activeGenres/clear';","// libraries\nimport { combineReducers } from 'redux';\n// reducers\nimport genres from './genres';\n\nexport default combineReducers({\n  genres,\n});\n","// libraries\nimport { applyMiddleware, createStore } from 'redux';\nimport { createLogger } from 'redux-logger';\n// reducers\nimport rootReducer from '../reducers';\n\nconst logger = createLogger();\n\nexport default createStore(\n  rootReducer,\n  applyMiddleware(logger),\n);\n","export default {\n  accessDenied: '/404',\n  mainPage: '/',\n  detailsPage: '/details/:category/:cardId',\n  search: '/search/:category/:page',\n  catalog: '/:category/:page',\n};\n","export default 'Something went wrong. Please try again later.';\n","// constants\nimport DEFAULT_ERROR from '../constants/errors';\n\nexport class RequestError extends Error {\n  constructor(status = '', responseData) {\n    super();\n\n    const errorData = responseData || {};\n\n    this.message = errorData.message || DEFAULT_ERROR;\n    this.errors = errorData.errors;\n    this.status = status;\n    this.name = 'RequestError';\n  }\n}\n\nexport default {};\n","// helpers\nimport { RequestError } from '../helpers/exceptions';\n\nconst baseUrl = 'https://api.themoviedb.org/3';\nconst apiKey = '6b19f7c4abb404c76cdab04bab4aaa89';\n\nconst contentTypes = {\n  json: 'application/json',\n  // text: 'text/html',\n};\n\nconst encodeQueryData = (data) => {\n  if (!data) {\n    return '';\n  }\n\n  try {\n    const queryStringStart = '?';\n\n    return Object.keys(data).reduce((queryString, key, index) => {\n      const paramStringStart = index ? '&' : '';\n      let paramString = '';\n      if (encodeURIComponent(data[key])) {\n        paramString = `${paramStringStart}${encodeURIComponent(key)}=${encodeURIComponent(data[key])}`;\n      }\n\n      return queryString + paramString;\n    }, queryStringStart);\n  } catch (e) {\n    throw new TypeError('Error: incorrect query data format.');\n  }\n};\n\nconst getResponseData = async (response) => {\n\n  const contentType = response.headers.get('content-type');\n\n  if (contentType.includes(contentTypes.json)) {\n    return response.json();\n  }\n\n  throw new TypeError('Error: incorrect received data format.');\n};\n\nconst sendRequest = async (url = '', options = {}) => {\n  const requestUrl = baseUrl + url;\n  const requestHeaders = new Headers({\n    'Content-Type': contentTypes.json,\n  });\n\n  const requestOptions = {\n    headers: requestHeaders,\n    ...options,\n  };\n  const response = await fetch(requestUrl, requestOptions);\n  const responseData = await getResponseData(response);\n\n  if (!response.ok) {\n    throw new RequestError(response.status, responseData);\n  }\n\n  return responseData;\n};\n\nexport const sendGetRequest = (url, data) => {\n  const requestUrl = url + encodeQueryData({ ...data, api_key: apiKey, language: 'en-US' });\n  const requestOptions = {\n    method: 'GET',\n  };\n\n  return sendRequest(requestUrl, requestOptions);\n};\n\nexport default sendGetRequest;\n","/* istanbul ignore file */\nimport { sendGetRequest } from './index';\n\nexport const getCategoryData = (category, data) => sendGetRequest(`/${category}/popular`, data);\n\nexport const getDetailsData = (category, id, data) => sendGetRequest(`/${category}/${id}`, data);\n\nexport const getSearchResult = (category, data) => sendGetRequest(`/search/${category}`, data);\n\nexport const getDiscoverResult = (data) => sendGetRequest('/discover/movie', data);\n\nexport const getGenres = () => sendGetRequest('/genre/movie/list');\n","import moment from 'moment';\nimport 'moment-duration-format';\n\nexport const formatTime = (time, unit, format) => moment.duration(time, unit).format(format, { trim: false });\nexport const formatDate = (date, format) => moment(date).format(format);\n\nexport const parseQueryString = (queryString) => {\n  const query = {};\n  const pairs = (queryString[0] === '?' ? queryString.substr(1) : queryString).split('&');\n  for (let i = 0; i < pairs.length; i++) {\n    const pair = pairs[i].split('=');\n    query[decodeURIComponent(pair[0])] = decodeURIComponent(pair[1] || '');\n  }\n\n  return query;\n};\n\nexport const getStringValues = (array = [], key) => (array.length ? array.map((item) => item[key]).join(', ') : '');\n\nexport const formatCardData = ({\n  number_of_episodes: numberOfEpisodes, number_of_seasons: numberOfSeasons, original_name: originalName,\n  episode_run_time: episodeRunTime, reviews: { results: reviews = [] } = {}, homepage, original_title: originalTitle,\n  original_language: originalLanguage, spoken_languages: spokenLanguages, status, runtime, tagline,\n  release_date: releaseDate, genres, poster_path: poster, backdrop_path: backgroundImage,\n  vote_average: voteAverage, vote_count: voteCount, overview, title, name, id,\n  credits: { cast = [] } = {}, recommendations: { results: recommendations = [] } = {},\n} = {}) => {\n  const formattedRunTime = formatTime(runtime || episodeRunTime, 'minutes', 'h[h] m[m]');\n  const releaseYear = formatDate(releaseDate, 'YYYY');\n  const genresList = getStringValues(genres, 'name');\n  const spokenLanguagesList = getStringValues(spokenLanguages, 'name');\n\n  return {\n    id,\n    numberOfEpisodes,\n    numberOfSeasons,\n    episodeRunTime,\n    reviews,\n    homepage,\n    originalLanguage,\n    status,\n    tagline,\n    releaseDate,\n    poster,\n    backgroundImage,\n    voteAverage,\n    voteCount,\n    overview,\n    cast,\n    recommendations,\n    originalTitle: originalTitle || originalName,\n    cardTitle: title || name,\n    formattedRunTime,\n    releaseYear,\n    genresList,\n    spokenLanguagesList,\n  };\n};\n","// libraries\nimport React from 'react';\n\nconst Loader = ({ isActive, children }) => {\n  const containerClass = isActive ? 'loader-overlay-container' : '';\n\n  return (\n    <div className={containerClass}>\n      {children}\n      {isActive && (\n        <div className=\"loader-spinner-wrapper\">\n          <div className=\"loader-spinner\" />\n        </div>\n      ) }\n    </div>\n  );\n};\n\nexport default Loader;\n","export default {\n  movie: 'movie',\n  tv: 'tv',\n};\n\nexport const MOVIE_TABS = {\n  OVERVIEW: 'Overview',\n  DETAILS: 'Details',\n  REVIEWS: 'Reviews',\n  CAST: 'Cast',\n};\n","import React, { useState, useEffect, useCallback } from 'react';\nimport { useLocation, useParams } from 'react-router-dom';\n\nimport { useSelector } from 'react-redux';\nimport {\n  getCategoryData, getDetailsData, getSearchResult, getDiscoverResult,\n} from '../api/movies';\nimport { formatCardData, parseQueryString } from '../helpers/formatData';\nimport Loader from '../components/Partials/Loader';\nimport ROUTES from '../constants/routes';\n// constants\nimport CATEGORIES from '../constants/categories';\n\nconst COUNT_OF_TOP_CARD = 10;\n\nconst withCatalogRequest = (Component) => () => {\n  const [isLoading, setIsLoading] = useState(true);\n  const [data, setData] = useState(null);\n  const [error, setError] = useState(null);\n  const location = useLocation();\n  const params = useParams();\n  const { activeGenres } = useSelector(({ genres }) => genres);\n  const { category, page, cardId } = params;\n  const isMovie = category === CATEGORIES.movie;\n\n  const getData = useCallback(async () => {\n    setIsLoading(true);\n\n    try {\n      // get data for main page\n      if (location.pathname === ROUTES.mainPage) {\n        const { results: mostPopularMovies = [] } = await getCategoryData('movie');\n        const { results: mostPopularTvs = [] } = await getCategoryData('tv');\n\n        const randomMovie = mostPopularMovies[Math.ceil(Math.random() * COUNT_OF_TOP_CARD) - 1];\n        let bigMovieCardData = {};\n\n        if (randomMovie) {\n          const movieId = randomMovie.id;\n          bigMovieCardData = await getDetailsData(CATEGORIES.movie, movieId);\n        }\n\n        setData({\n          mostPopularMovies: mostPopularMovies.slice(0, COUNT_OF_TOP_CARD),\n          mostPopularTvs: mostPopularTvs.slice(0, COUNT_OF_TOP_CARD),\n          bigMovieCardData: formatCardData(bigMovieCardData),\n        });\n      } else if (cardId && !page) {\n        // get data for one card\n        const response = await getDetailsData(category, cardId, {\n          append_to_response: [\n            'recommendations', 'credits', 'reviews',\n          ],\n        });\n        const detailsData = formatCardData(response);\n\n        setData(detailsData);\n      } else if (location.search) {\n        // get data from search query\n        const searchParams = parseQueryString(location.search);\n        const catalogData = await getSearchResult(category, { page, ...searchParams });\n\n        setData(catalogData);\n      } else if (isMovie && activeGenres && activeGenres.length) {\n        // get filtered data\n        const catalogData = await getDiscoverResult({ with_genres: [...activeGenres], page });\n        setData({\n          ...catalogData,\n          isGenresFilterShown: isMovie,\n        });\n      } else {\n        // get catalog data\n        const catalogData = await getCategoryData(category, { page });\n        setData({\n          ...catalogData,\n          isGenresFilterShown: isMovie,\n        });\n      }\n    } catch ({ message }) {\n      setError(message);\n    } finally {\n      setIsLoading(false);\n    }\n  }, [\n    location.pathname, location.search, activeGenres, cardId, category, page, isMovie,\n  ]);\n  // };\n\n  useEffect(() => {\n    getData();\n    window.scrollTo(0, 0);\n  }, [\n    location.pathname, location.search, activeGenres, getData,\n  ]);\n\n  const renderData = () => {\n    if (error) {\n      return (\n        <div className=\"message\">\n          {error}\n        </div>\n      );\n    }\n\n    if (data) {\n      return (\n        <Component {...data} />\n      );\n    }\n\n    return null;\n  };\n\n  return (\n    <Loader isActive={isLoading}>\n      { renderData() }\n    </Loader>\n  );\n};\n\nexport default withCatalogRequest;\n","// libraries\nimport React, { useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Link, useHistory, useParams } from 'react-router-dom';\n// api\nimport { getGenres } from '../../../api/movies';\n// actions\nimport { addActiveGenre, removeActiveGenre, clearActiveGenres } from '../../../actions/genres';\n\nconst GenresList = () => {\n  const [genresData, setGenresData] = useState([]);\n  const dispatch = useDispatch();\n  const history = useHistory();\n  const { category } = useParams();\n  const activeGenres = useSelector(({ genres }) => genres.activeGenres);\n\n  const getGenresData = async () => {\n    const { genres = [] } = await getGenres();\n    setGenresData([{ id: 0, name: 'All Genres' }, ...genres]);\n  };\n\n  useEffect(() => {\n    getGenresData();\n  }, []);\n\n  return genresData.length ? (\n    <ul className=\"catalog__genres-list\">\n      {genresData.map(({ id, name }) => {\n        const isActive = (id || activeGenres.length) ? activeGenres.includes(id) : true;\n\n        return (\n          <li key={id} className={`catalog__genres-item ${isActive ? 'catalog__genres-item--active' : ''}`}>\n            <Link\n              className=\"catalog__genres-link\"\n              to=\"/\"\n              onClick={(event) => {\n                event.preventDefault();\n                if (id) {\n                  if (isActive) {\n                    dispatch(removeActiveGenre(id));\n                  } else {\n                    dispatch(addActiveGenre(id));\n                  }\n                } else {\n                  dispatch(clearActiveGenres());\n                }\n                history.push(`/${category}/1/`);\n              }}\n            >\n              {name}\n            </Link>\n          </li>\n        );\n      })}\n    </ul>\n  ) : null;\n};\n\nexport default GenresList;\n","/* istanbul ignore file */\nimport { ADD_ACTIVE_GENRE, REMOVE_ACTIVE_GENRE, CLEAR_ACTIVE_GENRES } from '../constants/actions/genres';\n\nexport const addActiveGenre = (id) => ({\n  type: ADD_ACTIVE_GENRE,\n  id,\n});\n\nexport const removeActiveGenre = (id) => ({\n  type: REMOVE_ACTIVE_GENRE,\n  id,\n});\n\nexport const clearActiveGenres = () => ({\n  type: CLEAR_ACTIVE_GENRES,\n});\n","// libraries\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { useParams, useLocation, Link } from 'react-router-dom';\n\nconst MAXIMUM_OF_VISIBLE_PAGE_NUMBERS = 7;\n\nconst Pagination = ({ totalPages }) => {\n  const { page, category } = useParams();\n  const activePage = Number(page);\n  const { search } = useLocation();\n  const pageNumbers = [];\n  const pageLinks = [];\n\n  // a maximum of 7 page numbers will be visible\n  if (totalPages > MAXIMUM_OF_VISIBLE_PAGE_NUMBERS) {\n    // active page is near the end\n    if (activePage + 3 >= totalPages) {\n      for (let i = (activePage - 2); i <= totalPages; i++) {\n        pageNumbers.push(i);\n      }\n\n      // add more page numbers to the start of the array if there is not 5\n      if (pageNumbers.length < 6) {\n        // eslint-disable-next-line max-depth\n        for (let i = (pageNumbers.length + 1); i < MAXIMUM_OF_VISIBLE_PAGE_NUMBERS; i++) {\n          pageNumbers.unshift(pageNumbers[0] - 1);\n        }\n      }\n    } else if (activePage <= 4) {\n      // active page is near the start\n      for (let i = (activePage + 2); i >= 1; i--) {\n        pageNumbers.unshift(i);\n      }\n\n      // add more page numbers to the end of the array if there is not 5\n      if (pageNumbers.length < 6) {\n        // eslint-disable-next-line max-depth\n        for (let i = (pageNumbers.length + 1); i < 7; i++) {\n          pageNumbers.push(i);\n        }\n      }\n    } else {\n      // active page is not near the start or the end\n      for (let i = (activePage - 2); i <= activePage + 2; i++) {\n        pageNumbers.push(i);\n      }\n    }\n  } else {\n    // total amount of page numbers is less than MAXIMUM_OF_VISIBLE_PAGE_NUMBERS\n    for (let i = 1; i <= totalPages; i++) {\n      pageNumbers.push(i);\n    }\n  }\n\n  for (let i = 0; i < pageNumbers.length; i++) {\n    // add the active page as a span element\n    if (pageNumbers[i] === activePage) {\n      pageLinks.push(\n        <span key={activePage} className=\"pagination__page-number pagination__active-page\">\n          {activePage}\n        </span>,\n      );\n    } else {\n      pageLinks.push(\n        // add the search query if there is one\n        <Link key={pageNumbers[i]} className=\"pagination__page-number\" to={`/${category}/${pageNumbers[i]}${search}`}>\n          {pageNumbers[i]}\n        </Link>,\n      );\n    }\n  }\n\n  // add a link to the first page if it is not in the page links array\n  if (pageNumbers[0] >= 2) {\n    const firstPageLink = [\n      // add the search query if there is one\n      <Link key=\"first-page-link\" className=\"pagination__page-number\" to={`/${category}/${1}${search}`}>\n        1\n      </Link>,\n      <span key=\"first-page-ellipsis\" className=\"pagination__ellipsis\">...</span>,\n    ];\n    pageLinks.unshift(...firstPageLink);\n  }\n\n  // add a link to the last page if it is not in the page links array\n  if (pageNumbers[pageNumbers.length - 1] <= (totalPages - 2)) {\n    const LastPageLink = [\n      <span key=\"last-page-ellipsis\" className=\"pagination__ellipsis\">...</span>,\n      // add the search query if there is one\n      <Link key=\"last-page-link\" className=\"pagination__page-number\" to={`/${category}/${totalPages}${search}`}>\n        {totalPages}\n      </Link>,\n    ];\n    pageLinks.push(...LastPageLink);\n  }\n\n  return pageLinks.length > 1 ? (\n    <ul className=\"pagination\">\n      {pageLinks.map((link) => (\n        <li key={link.key}>{link}</li>\n      ))}\n    </ul>\n  ) : null;\n};\n\nPagination.propTypes = {\n  totalPages: PropTypes.number.isRequired,\n};\n\nexport default Pagination;\n","export const URL_IMAGE = {\n  poster: 'https://image.tmdb.org/t/p/w300',\n  backgroundImage: 'https://image.tmdb.org/t/p/original',\n  castPhoto: 'https://image.tmdb.org/t/p/w500',\n};\n","// libraries\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\n// constants\nimport { URL_IMAGE } from '../../../constants/url';\n\nconst SmallMovieCard = ({ poster, cardTitle, link }) => (cardTitle ? (\n  <Link className=\"small-movie-card catalog__movies-card small-movie-card__link\" to={link}>\n    <div className={`small-movie-card__image ${poster ? '' : 'small-movie-card__image--no-image'}`}>\n      <img\n        alt={cardTitle}\n        height=\"450\"\n        loading=\"lazy\"\n        src={poster ? `${URL_IMAGE.poster}${poster}` : '/img/no-poster.jpeg'}\n        width=\"300\"\n      />\n    </div>\n    <div className=\"small-movie-card__info\">\n      <h3 className=\"small-movie-card__title\">{cardTitle}</h3>\n    </div>\n  </Link>\n) : null);\n\nSmallMovieCard.defaultProps = {\n  cardTitle: '',\n  poster: '',\n  link: '',\n};\n\nSmallMovieCard.propTypes = {\n  poster: PropTypes.string,\n  cardTitle: PropTypes.string,\n  link: PropTypes.string,\n};\n\nexport default SmallMovieCard;\n","// libraries\nimport React from 'react';\nimport { useParams } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n// helpers\nimport { formatCardData } from '../../../helpers/formatData';\n// views\nimport SmallMovieCard from '../SmallMovieCard';\n\nconst MoviesCatalog = ({ catalogData = [] }) => {\n  const { category } = useParams();\n\n  return (\n    <div className=\"catalog__movies-list\">\n      {\n        catalogData.map(\n          (cardProps) => (\n            <SmallMovieCard\n              {...formatCardData(cardProps)}\n              key={cardProps.id}\n              link={`/details/${category}/${cardProps.id}`}\n            />\n          ),\n        )\n      }\n    </div>\n  );\n};\n\nMoviesCatalog.propTypes = {\n  catalogData: PropTypes.arrayOf(PropTypes.shape({})),\n};\n\nexport default MoviesCatalog;\n","// libraries\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { useParams, useLocation } from 'react-router-dom';\n// views\nimport GenresList from '../../Partials/GenresList';\nimport Pagination from '../../Partials/Pagination';\nimport MoviesCatalog from '../../Partials/MoviesCatalog';\n// constants\nimport CATEGORIES from '../../../constants/categories';\n\nconst CatalogPage = ({\n  total_pages: totalPages, total_results: totalResults, results: catalogData = [], isGenresFilterShown = false,\n}) => {\n  const { category } = useParams();\n  const { search } = useLocation();\n\n  let headerText;\n\n  if (search) {\n    headerText = `Search Results - ${totalResults} found`;\n  } else {\n    headerText = `${category === CATEGORIES.movie ? 'Movies' : 'TV Shows'}`;\n  }\n\n  return (\n    <div className=\"catalog container \">\n      <h2 className=\"page-title\">{headerText}</h2>\n      {isGenresFilterShown && (<GenresList />)}\n      {catalogData.length > 0 ? (\n        <>\n          <MoviesCatalog catalogData={catalogData} />\n          <Pagination totalPages={totalPages} />\n        </>\n      ) : (<div className=\"page-message\">No results found</div>)}\n    </div>\n  );\n};\n\nCatalogPage.propTypes = {\n  total_pages: PropTypes.number.isRequired,\n  total_results: PropTypes.number.isRequired,\n  results: PropTypes.arrayOf(PropTypes.object),\n  isGenresFilterShown: PropTypes.bool,\n};\n\nexport default CatalogPage;\n","// libraries\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport SwiperCore, { Navigation } from 'swiper';\nimport { Swiper, SwiperSlide } from 'swiper/react';\n// styles\nimport 'swiper/swiper.scss';\nimport 'swiper/components/navigation/navigation.scss';\n// helpers\nimport { formatCardData } from '../../../helpers/formatData';\n// views\nimport SmallMovieCard from '../SmallMovieCard';\n\n// install Swiper components\nSwiperCore.use([Navigation]);\n\nconst Slider = ({ items = [], category }) => {\n  const swiperSettings = {\n    updateOnWindowResize: true,\n    breakpoints: {\n      1440: {\n        slidesPerView: 5,\n        slidesPerGroup: 5,\n        spaceBetween: 60,\n      },\n      1024: {\n        slidesPerView: 4,\n        slidesPerGroup: 4,\n        spaceBetween: 30,\n      },\n      480: {\n        slidesPerView: 3,\n        slidesPerGroup: 3,\n        spaceBetween: 15,\n      },\n      0: {\n        slidesPerView: 2,\n        slidesPerGroup: 2,\n        spaceBetween: 20,\n      },\n    },\n    setWrapperSize: true,\n    navigation: true,\n  };\n\n  return (\n    <Swiper {...swiperSettings}>\n      {items.map((item) => (\n        <SwiperSlide key={`${category}-${item.id}`}>\n          <SmallMovieCard {...formatCardData(item)} link={`/details/${category}/${item.id}`} />\n        </SwiperSlide>\n      ))}\n    </Swiper>\n  );\n};\n\nSlider.propTypes = {\n  items: PropTypes.arrayOf(PropTypes.shape({\n    id: PropTypes.number.isRequired,\n  })),\n  category: PropTypes.string.isRequired,\n};\n\nexport default Slider;\n","export default [\n  { title: 'Bad', min: 0 },\n  { title: 'Normal', min: 3 },\n  { title: 'Good', min: 5 },\n  { title: 'Very good', min: 8 },\n  { title: 'Awesome', min: 10 },\n];\n","// libraries\nimport React, { useMemo } from 'react';\nimport PropTypes from 'prop-types';\n// helpers\nimport { computeRatingLevel } from '../../../helpers/rating';\n\nconst MovieTabOverview = ({ voteAverage, voteCount, overview }) => {\n  const ratingLevel = useMemo(() => computeRatingLevel(voteAverage), [voteAverage]);\n\n  return (\n    <>\n      <div className=\"movie-rating\">\n        <div className=\"movie-rating__score\">{voteAverage}</div>\n        <p className=\"movie-rating__meta\">\n          <span className=\"movie-rating__level\">{ratingLevel}</span>\n          <span className=\"movie-rating__count\">{`${voteCount} ratings`}</span>\n        </p>\n      </div>\n      <p className=\"movie-card__text\">{overview}</p>\n    </>\n  );\n};\n\nMovieTabOverview.defaultProps = {\n  voteAverage: 0,\n  voteCount: 0,\n  overview: '',\n};\n\nMovieTabOverview.propTypes = {\n  voteAverage: PropTypes.number,\n  voteCount: PropTypes.number,\n  overview: PropTypes.string,\n};\n\nexport default MovieTabOverview;\n","import USER_RATINGS from '../constants/rating';\n\nexport const computeRatingLevel = (rating) => USER_RATINGS.filter(\n  (rank) => rank.min <= rating,\n).pop().title;\n","// libraries\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\nconst MovieTabReviews = ({ reviews = [] }) => (\n  <div className=\"movie-card__tab-content-wrapper\">\n    {reviews.length ? reviews.map(({\n      id, author, content, url,\n    }) => (\n      <div key={`review-${id}`} className=\"review\">\n        <blockquote className=\"review__quote\">\n          <p className=\"review__text\">{content}</p>\n          <footer className=\"review__details\">\n            <cite className=\"review__author\">{author}</cite>\n            <a href={url}>More Details</a>\n          </footer>\n        </blockquote>\n      </div>\n    )) : 'No reviews'}\n  </div>\n);\n\nMovieTabReviews.deafultProps = {\n  reviews: [],\n};\n\nMovieTabReviews.propTypes = {\n  reviews: PropTypes.arrayOf(PropTypes.shape({\n    id: PropTypes.string.isRequired,\n    author: PropTypes.string.isRequired,\n    content: PropTypes.string.isRequired,\n    url: PropTypes.string.isRequired,\n  })),\n};\n\nexport default MovieTabReviews;\n","// libraries\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { useParams } from 'react-router-dom';\n// constants\nimport CATEGORIES from '../../../constants/categories';\n\nconst MovieTabDetails = ({\n  numberOfEpisodes, numberOfSeasons, tagline, homepage, cardTitle, originalTitle,\n  originalLanguage, formattedRunTime, genresList, releaseDate, status,\n}) => {\n  const { category } = useParams();\n  const isMovie = category === CATEGORIES.movie;\n\n  return (\n    <>\n      <p className=\"movie-card__details-item\">\n        <strong>Title: </strong>\n        {cardTitle}\n      </p>\n      <p className=\"movie-card__details-item\">\n        <strong>Original Title: </strong>\n        {originalTitle}\n      </p>\n      {tagline && (\n      <p className=\"movie-card__details-item\">\n        <strong>Quote: </strong>\n        {tagline}\n      </p>\n      )}\n      {!isMovie && (\n        <>\n          <p className=\"movie-card__details-item\">\n            <strong>Seasons: </strong>\n            {numberOfSeasons}\n          </p>\n          <p className=\"movie-card__details-item\">\n            <strong>Episodes: </strong>\n            {numberOfEpisodes}\n          </p>\n        </>\n      )}\n      <p className=\"movie-card__details-item\">\n        <strong>\n          {`${isMovie ? '' : 'Episode '} Run Time `}\n        </strong>\n        {formattedRunTime}\n      </p>\n      <p className=\"movie-card__details-item\">\n        <strong>Genre: </strong>\n        {genresList}\n      </p>\n      <p className=\"movie-card__details-item\">\n        <strong>Language: </strong>\n        {originalLanguage}\n      </p>\n      <p className=\"movie-card__details-item\">\n        <strong>Status: </strong>\n        {status}\n      </p>\n      {releaseDate && (\n      <p className=\"movie-card__details-item\">\n        <strong>Release date: </strong>\n        {releaseDate}\n      </p>\n      )}\n      {homepage ? (\n        <p className=\"movie-card__details-item\">\n          <strong>Homepage: </strong>\n          <a href={homepage} rel=\"noreferrer noopener\" target=\"_blank\">Link</a>\n        </p>\n      ) : null}\n    </>\n  );\n};\n\nMovieTabDetails.defaultProps = {\n  numberOfEpisodes: 0,\n  numberOfSeasons: 0,\n  tagline: '',\n  homepage: '',\n  cardTitle: '',\n  originalTitle: '',\n  originalLanguage: '',\n  formattedRunTime: '',\n  genresList: '',\n  releaseDate: '',\n  status: '',\n};\n\nMovieTabDetails.propTypes = {\n  numberOfEpisodes: PropTypes.number,\n  numberOfSeasons: PropTypes.number,\n  tagline: PropTypes.string,\n  homepage: PropTypes.string,\n  cardTitle: PropTypes.string,\n  originalTitle: PropTypes.string,\n  originalLanguage: PropTypes.string,\n  formattedRunTime: PropTypes.string,\n  genresList: PropTypes.string,\n  releaseDate: PropTypes.string,\n  status: PropTypes.string,\n};\n\nexport default MovieTabDetails;\n","// libraries\nimport React from 'react';\nimport PropTypes from 'prop-types';\n// constants\nimport { URL_IMAGE } from '../../../constants/url';\n\nconst MovieTabCast = ({ cast = [] }) => (\n  <div className=\"movie-card__tab-content-wrapper\">\n    {cast.length ? (\n      <ol className=\"movie-card__casts\">\n        {cast.map(({\n          cast_id: id, character, name: profileName, profile_path: profilePath, gender,\n        }) => {\n          const reservedImage = gender === 2 ? '/img/woman-profile.jpeg' : '/img/man-profile.jpeg';\n\n          return (\n            <li key={`cast-${id}`} className=\"movie-card__cast-wrapper\">\n              <img\n                alt={profileName}\n                className=\"movie-card__cast-image\"\n                height=\"175\"\n                loading=\"lazy\"\n                src={profilePath ? `${URL_IMAGE.castPhoto}${profilePath}` : reservedImage}\n                width=\"138\"\n              />\n              <p className=\"movie-card__cast-name\">{profileName}</p>\n              <p className=\"movie-card__cast-character\">{character}</p>\n            </li>\n          );\n        })}\n      </ol>\n    ) : (<p>Cast not found</p>)}\n  </div>\n);\n\nMovieTabCast.defaultProps = {\n  cast: [],\n};\n\nMovieTabCast.propTypes = {\n  cast: PropTypes.arrayOf(PropTypes.shape({\n    id: PropTypes.number.isRequired,\n    character: PropTypes.string,\n    name: PropTypes.string,\n    profile_path: PropTypes.string,\n    gender: PropTypes.number,\n  })),\n};\n\nexport default MovieTabCast;\n","// libraries\nimport React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { useParams } from 'react-router-dom';\n// constants\nimport { MOVIE_TABS } from '../../../constants/categories';\nimport { URL_IMAGE } from '../../../constants/url';\n// views\nimport Slider from '../../Partials/Slider';\nimport MovieTabOverview from '../../Partials/MovieTabOverview';\nimport MovieTabReviews from '../../Partials/MovieTabReviews';\nimport MovieTabDetails from '../../Partials/MovieTabDetails';\nimport MovieTabCast from '../../Partials/MovieTabCast';\n\nconst DetailsPage = (props) => {\n  const {\n    formattedRunTime, releaseYear, genresList, cardTitle, reviews = [], tagline,\n    poster, backgroundImage, voteAverage, voteCount, overview, cast = [], recommendations = [],\n  } = props;\n  const [activeTab, setActiveTab] = useState(MOVIE_TABS.OVERVIEW);\n  const { category } = useParams();\n\n  const renderActiveTab = () => {\n    switch (activeTab) {\n      case MOVIE_TABS.DETAILS:\n        return (\n          <MovieTabDetails {...props} />\n        );\n      case MOVIE_TABS.REVIEWS:\n        return (\n          <MovieTabReviews reviews={reviews} />\n        );\n      case MOVIE_TABS.CAST:\n        return (\n          <MovieTabCast cast={cast} />\n        );\n      default:\n        return (\n          <MovieTabOverview\n            cast={cast}\n            overview={overview}\n            voteAverage={voteAverage}\n            voteCount={voteCount}\n          />\n        );\n    }\n  };\n\n  return (\n    <>\n      <section className=\"movie-card movie-card--full\">\n        <div className=\"movie-card__hero\">\n          <div\n            className=\"movie-card__bg\"\n            style={{ backgroundImage: `url('${URL_IMAGE.backgroundImage}${backgroundImage}')` }}\n          />\n          <div className=\"container\">\n            <div className=\" movie-card__wrap\">\n              <div className=\"movie-card__desc\">\n                <h2 className=\"movie-card__title\">{`${cardTitle} (${releaseYear})`}</h2>\n                <p className=\"movie-card__meta\">\n                  <span className=\"movie-card__genre\">{genresList}</span>\n                  <span className=\"movie-card__runtime\">{formattedRunTime}</span>\n                </p>\n                <i className=\"movie-card__tagline\">{tagline}</i>\n              </div>\n            </div>\n          </div>\n        </div>\n        <div className=\"container\">\n          <div className=\" movie-card__wrap movie-card__translate-top\">\n            <div className=\"movie-card__info\">\n              <div className=\"movie-card__poster movie-card__poster--big\">\n                <img\n                  alt={cardTitle}\n                  height=\"327\"\n                  loading=\"lazy\"\n                  src={`${URL_IMAGE.poster}${poster}`}\n                  width=\"218\"\n                />\n              </div>\n\n              <div className=\"movie-card__desc\">\n                <nav className=\"movie-nav movie-card__nav\">\n                  <ul className=\"movie-nav__list\">\n                    {Object.values(MOVIE_TABS)\n                      .map((tab) => (\n                        <li\n                          key={tab}\n                          className={`movie-nav__item ${tab === activeTab ? 'movie-nav__item--active' : ''}`}\n                        >\n                          <button\n                            className=\"movie-nav__link\"\n                            onClick={(event) => {\n                              event.preventDefault();\n                              setActiveTab(tab);\n                            }}\n                            type=\"button\"\n                          >\n                            {tab}\n                          </button>\n                        </li>\n                      ))}\n                  </ul>\n                </nav>\n\n                <div className=\"movie-card__tab-wrapper\">\n                  {renderActiveTab()}\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </section>\n      {recommendations.length ? (\n        <div className=\"container\">\n          <section className=\"catalog catalog--like-this\">\n            <h2 className=\"catalog__title\">More like this</h2>\n            <Slider category={category} items={recommendations} />\n          </section>\n        </div>\n      ) : null}\n    </>\n  );\n};\n\nDetailsPage.propTypes = {\n  formattedRunTime: PropTypes.string,\n  releaseYear: PropTypes.string,\n  genresList: PropTypes.string,\n  cardTitle: PropTypes.string,\n  reviews: PropTypes.arrayOf(PropTypes.object),\n  tagline: PropTypes.string,\n  poster: PropTypes.string,\n  backgroundImage: PropTypes.string,\n  voteAverage: PropTypes.number,\n  voteCount: PropTypes.number,\n  overview: PropTypes.string,\n  cast: PropTypes.arrayOf(PropTypes.object),\n  recommendations: PropTypes.arrayOf(PropTypes.object),\n};\n\nexport default DetailsPage;\n","// libraries\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\n// constants\nimport { URL_IMAGE } from '../../../constants/url';\nimport CATEGORIES from '../../../constants/categories';\n\nconst BigMovieCard = ({\n  id, poster, backgroundImage, formattedRunTime, releaseYear, genresList, cardTitle, tagline,\n}) => (id ? (\n  <section className=\"movie-card\">\n    <div\n      className=\"movie-card__bg\"\n      style={{ backgroundImage: `url('${URL_IMAGE.backgroundImage}${backgroundImage}')` }}\n    />\n\n    <div className=\"container\">\n      <div className=\" movie-card__wrap\">\n        <div className=\"movie-card__info movie-card__info--main\">\n          <div className=\"movie-card__poster movie-card__poster--main\">\n            <img alt={cardTitle} loading=\"lazy\" src={`${URL_IMAGE.poster}${poster}`} />\n          </div>\n\n          <div className=\"movie-card__desc\">\n            <h2 className=\"movie-card__title\">{`${cardTitle} (${releaseYear})`}</h2>\n            <p className=\"movie-card__meta\">\n              <span className=\"movie-card__genre\">{genresList}</span>\n              <span className=\"movie-card__runtime\">{formattedRunTime}</span>\n            </p>\n            <i className=\"movie-card__tagline movie-card__tagline--main\">{tagline}</i>\n\n            <Link className=\"button movie-card__button\" to={`/details/${CATEGORIES.movie}/${id}`}>More Info</Link>\n          </div>\n        </div>\n      </div>\n    </div>\n  </section>\n) : null);\n\nBigMovieCard.defaultProps = {\n  id: 0,\n  poster: '',\n  backgroundImage: '',\n  formattedRunTime: '',\n  releaseYear: '',\n  genresList: '',\n  cardTitle: '',\n  tagline: '',\n};\n\nBigMovieCard.propTypes = {\n  id: PropTypes.number,\n  poster: PropTypes.string,\n  backgroundImage: PropTypes.string,\n  formattedRunTime: PropTypes.string,\n  releaseYear: PropTypes.string,\n  genresList: PropTypes.string,\n  cardTitle: PropTypes.string,\n  tagline: PropTypes.string,\n};\n\nexport default BigMovieCard;\n","// libraries\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\n// constants\nimport CATEGORIES from '../../../constants/categories';\n// views\nimport BigMovieCard from '../../Partials/BigMovieCard';\nimport Slider from '../../Partials/Slider';\n\nconst MainPage = ({ mostPopularMovies = [], mostPopularTvs = [], bigMovieCardData = {} }) => (\n  <>\n    <BigMovieCard {...bigMovieCardData} />\n\n    <div className=\"container\">\n      {mostPopularMovies.length ? (\n        <>\n          <div className=\"swiper__title-wrapper\">\n            <h2 className=\"swiper__title\">Most Popular Movies</h2>\n            <Link to=\"/movie/1\">Show All</Link>\n          </div>\n          <Slider category={CATEGORIES.movie} items={mostPopularMovies} />\n        </>\n      ) : null}\n      {mostPopularTvs.length ? (\n        <>\n          <div className=\"swiper__title-wrapper\">\n            <h2 className=\"swiper__title\">Most Popular TV Shows</h2>\n            <Link to=\"/tv/1\">Show All</Link>\n          </div>\n          <Slider category={CATEGORIES.tv} items={mostPopularTvs} />\n        </>\n      ) : null}\n    </div>\n  </>\n);\n\nMainPage.propTypes = {\n  mostPopularMovies: PropTypes.arrayOf(PropTypes.object),\n  mostPopularTvs: PropTypes.arrayOf(PropTypes.object),\n  bigMovieCardData: PropTypes.shape({}),\n};\n\nexport default MainPage;\n","// libraries\nimport React from 'react';\nimport { useHistory } from 'react-router-dom';\n// constants\nimport ROUTES from '../../../constants/routes';\n\nconst PageNotFound = () => {\n  const history = useHistory();\n\n  const redirectToHomePage = () => {\n    history.push(ROUTES.mainPage);\n  };\n\n  return (\n    <div className=\"container page-not-found\">\n      <div className=\"page-not-found__title\">404</div>\n      <p className=\"page-not-found__subtitle\">Oops! Page not found</p>\n      <p className=\"page-not-found__description\">Please go to the Home page by clicking the button below.</p>\n      <button\n        className=\"button page-not-found__button\"\n        onClick={redirectToHomePage}\n        type=\"button\"\n      >\n        Go to Home page\n      </button>\n    </div>\n  );\n};\n\nexport default PageNotFound;\n","// libraries\nimport React from 'react';\nimport { Link } from 'react-router-dom';\n\nconst Footer = () => (\n  <footer className=\"page-footer\">\n    <Link className=\"logo logo--light\" to=\"/\">WTW</Link>\n\n    <div className=\"copyright\">© 2020 What to watch Ltd.</div>\n  </footer>\n);\n\nexport default Footer;\n","// libraries\nimport React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { useHistory } from 'react-router-dom';\n// constants\nimport CATEGORIES from '../../../constants/categories';\n\nconst SearchBar = ({ closeMobileNav }) => {\n  const [searchInput, setSearchInput] = useState('');\n  const [searchCategory, setSearchCategory] = useState('movie');\n  const history = useHistory();\n\n  const submitHandler = (e) => {\n    e.preventDefault();\n    closeMobileNav();\n\n    if (searchInput) {\n      history.push(`/search/${searchCategory}/1/?query=${searchInput}`);\n    } else {\n      history.push(`/${searchCategory}/1/`);\n    }\n  };\n\n  return (\n    <div className=\"search-bar\">\n      <form className=\"search-bar__form\" onSubmit={submitHandler}>\n        <select\n          onChange={({ target: { value } }) => setSearchCategory(value)}\n          value={searchCategory}\n        >\n          <option value={CATEGORIES.movie}>Movie</option>\n          <option value={CATEGORIES.tv}>TV</option>\n        </select>\n        <input\n          className=\"search-bar__input\"\n          onChange={({ target: { value } }) => setSearchInput(value)}\n          type=\"text\"\n          value={searchInput}\n        />\n        <button className=\"search-bar__button\" type=\"submit\">\n          <svg height=\"20\" viewBox=\"0 0 512.005 512.005\" width=\"20\" xmlns=\"http://www.w3.org/2000/svg\">\n            {/* eslint-disable-next-line max-len */}\n            <path d=\"M505.749,475.587l-145.6-145.6c28.203-34.837,45.184-79.104,45.184-127.317c0-111.744-90.923-202.667-202.667-202.667 S0,90.925,0,202.669s90.923,202.667,202.667,202.667c48.213,0,92.48-16.981,127.317-45.184l145.6,145.6 c4.16,4.16,9.621,6.251,15.083,6.251s10.923-2.091,15.083-6.251C514.091,497.411,514.091,483.928,505.749,475.587z M202.667,362.669c-88.235,0-160-71.765-160-160s71.765-160,160-160s160,71.765,160,160S290.901,362.669,202.667,362.669z\"/>\n          </svg>\n        </button>\n      </form>\n    </div>\n  );\n};\n\nSearchBar.propTypes = {\n  closeMobileNav: PropTypes.func.isRequired,\n};\n\nexport default SearchBar;\n","// libraries\nimport React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\n// views\nimport SearchBar from '../SearchBar';\n// constants\nimport CATEGORIES from '../../../constants/categories';\n\nconst Header = () => {\n  const [isMobileNavOpened, setIsMobileNavOpened] = useState(false);\n\n  const closeMobileNav = () => {\n    setIsMobileNavOpened(false);\n    document.body.classList.remove('nav-mobile-scroll-lock');\n  };\n\n  const clickHamburgerButton = () => {\n    if (isMobileNavOpened) {\n      closeMobileNav();\n    } else {\n      setIsMobileNavOpened(true);\n      document.body.classList.add('nav-mobile-scroll-lock');\n    }\n  };\n\n  return (\n    <header className={`page-header ${isMobileNavOpened ? 'page-header__show-menu' : ''}`}>\n      <div className=\"container\">\n        <Link className=\"logo\" to=\"/\">WTW</Link>\n        <div className=\"page-header__menu-wrapper\">\n          <nav>\n            <ul className=\"page-nav\">\n              <li className=\"page-nav__item\">\n                <Link className=\"page-nav__link\" to={`/${CATEGORIES.movie}/1`}>Movies</Link>\n              </li>\n              <li className=\"page-nav__item\">\n                <Link className=\"page-nav__link\" to={`/${CATEGORIES.tv}/1`}>TV Shows</Link>\n              </li>\n            </ul>\n          </nav>\n          <SearchBar closeMobileNav={closeMobileNav} />\n        </div>\n        <button className=\"page-nav__hamburger-button\" onClick={clickHamburgerButton} type=\"button\">\n          <span />\n        </button>\n      </div>\n    </header>\n  );\n};\n\nexport default Header;\n","// libraries\nimport React from 'react';\nimport { Route, Switch } from 'react-router-dom';\n// constants\nimport ROUTES from '../constants/routes';\n// HOC\nimport withCatalogRequest from '../hoc/withCatalogRequest';\n// views\nimport CatalogPage from './Pages/CatalogPage';\nimport DetailsPage from './Pages/DetailsPage';\nimport MainPage from './Pages/MainPage';\nimport PageNotFound from './Pages/404';\nimport Footer from './Partials/Footer';\nimport Header from './Partials/Header';\n\nconst App = () => (\n  <>\n    <Header />\n    <main>\n      <Switch>\n        <Route component={withCatalogRequest(DetailsPage)} path={ROUTES.detailsPage} />\n        <Route component={withCatalogRequest(CatalogPage)} path={[ROUTES.search, ROUTES.catalog]} />\n        <Route\n          component={withCatalogRequest(MainPage)}\n          exact\n          path={ROUTES.mainPage}\n        />\n        <Route\n          component={PageNotFound}\n          exact\n          path=\"*\"\n        />\n      </Switch>\n    </main>\n    <Footer />\n  </>\n);\n\nexport default App;\n","/* istanbul ignore file */\n// libraries\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\n// config\nimport store from './js/config/store';\n// views\nimport App from './js/components/App';\n// styles\nimport './scss/index.scss';\nconsole.log(`${process.env.PUBLIC_URL}/`);\nReactDOM.render(\n  // eslint-disable-next-line react/jsx-filename-extension\n  <Provider store={store}>\n    <BrowserRouter basename={`${process.env.PUBLIC_URL}/`}>\n      <App />\n    </BrowserRouter>\n  </Provider>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}